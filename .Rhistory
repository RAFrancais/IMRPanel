cbind2014$ID <- c(1:51)
colnames(cbind2014)[15] <- "emi_pc"
colnames(cbind2014)[16] <- "pi_pc"
View(cbind2011)
pipc <- read.csv("D:/RLearning/IMRPanel/Datasets/pipc.csv", stringsAsFactors = FALSE)
PI_pc <- read.csv("D:/RLearning/IMRPanel/Datasets/PersonalIncomePC.csv", stringsAsFactors = FALSE)
View(PI_pc)
View(pipc)
View(PI_pc)
View(pipc)
View(PI_pc)
View(pipc)
View(PI_pc)
View(pipc)
all.equal(PI_pc,pipc)
names(PI_pc)[1] <- "State"; names(pipc)[1] <- "State"
all.equal(PI_pc,pipc)
imr2011 <- read.csv("D:/RLearning/IMRPanel/Datasets/IMR2011.csv", stringsAsFactors = FALSE)
imr2012 <- read.csv("D:/RLearning/IMRPanel/Datasets/IMR2012.csv", stringsAsFactors = FALSE)
imr2013 <- read.csv("D:/RLearning/IMRPanel/Datasets/IMR2013.csv", stringsAsFactors = FALSE)
imr2014 <- read.csv("D:/RLearning/IMRPanel/Datasets/IMR2014.csv", stringsAsFactors = FALSE)
hhi2011 <- read.csv("D:/RLearning/IMRPanel/Datasets/HHI2011.csv", stringsAsFactors = FALSE)
hhi2012 <- read.csv("D:/RLearning/IMRPanel/Datasets/HHI2012.csv", stringsAsFactors = FALSE)
hhi2013 <- read.csv("D:/RLearning/IMRPanel/Datasets/HHI2013.csv", stringsAsFactors = FALSE)
hhi2014 <- read.csv("D:/RLearning/IMRPanel/Datasets/HHI2014.csv", stringsAsFactors = FALSE)
hce2011 <- read.csv("D:/RLearning/IMRPanel/Datasets/HCE2011.csv", stringsAsFactors = FALSE)
hce2012 <- read.csv("D:/RLearning/IMRPanel/Datasets/HCE2012.csv", stringsAsFactors = FALSE)
hce2013 <- read.csv("D:/RLearning/IMRPanel/Datasets/HCE2013.csv", stringsAsFactors = FALSE)
hce2014 <- read.csv("D:/RLearning/IMRPanel/Datasets/HCE2014.csv", stringsAsFactors = FALSE)
cov2011 <- read.csv("D:/RLearning/IMRPanel/Datasets/COV2011.csv", stringsAsFactors = FALSE)
cov2012 <- read.csv("D:/RLearning/IMRPanel/Datasets/COV2012.csv", stringsAsFactors = FALSE)
cov2013 <- read.csv("D:/RLearning/IMRPanel/Datasets/COV2013.csv", stringsAsFactors = FALSE)
cov2014 <- read.csv("D:/RLearning/IMRPanel/Datasets/COV2014.csv", stringsAsFactors = FALSE)
obe2011 <- read.csv("D:/RLearning/IMRPanel/Datasets/OBE2011.csv", stringsAsFactors = FALSE)
obe2012 <- read.csv("D:/RLearning/IMRPanel/Datasets/OBE2012.csv", stringsAsFactors = FALSE)
obe2013 <- read.csv("D:/RLearning/IMRPanel/Datasets/OBE2013.csv", stringsAsFactors = FALSE)
obe2014 <- read.csv("D:/RLearning/IMRPanel/Datasets/OBE2014.csv", stringsAsFactors = FALSE)
pop2011 <- read.csv("D:/RLearning/IMRPanel/Datasets/POP2011.csv", stringsAsFactors = FALSE)
pop2012 <- read.csv("D:/RLearning/IMRPanel/Datasets/POP2012.csv", stringsAsFactors = FALSE)
pop2013 <- read.csv("D:/RLearning/IMRPanel/Datasets/POP2013.csv", stringsAsFactors = FALSE)
pop2014 <- read.csv("D:/RLearning/IMRPanel/Datasets/POP2014.csv", stringsAsFactors = FALSE)
smo2011 <- read.csv("D:/RLearning/IMRPanel/Datasets/SMO2011.csv", stringsAsFactors = FALSE)
smo2012 <- read.csv("D:/RLearning/IMRPanel/Datasets/SMO2012.csv", stringsAsFactors = FALSE)
smo2013 <- read.csv("D:/RLearning/IMRPanel/Datasets/SMO2013.csv", stringsAsFactors = FALSE)
smo2014 <- read.csv("D:/RLearning/IMRPanel/Datasets/SMO2014.csv", stringsAsFactors = FALSE)
emission11_14 <- read.csv("D:/RLearning/IMRPanel/Datasets/emission11_14.csv", stringsAsFactors = FALSE)
PI_pc <- read.csv("D:/RLearning/IMRPanel/Datasets/PersonalIncomePC.csv", stringsAsFactors = FALSE)
#Fixing the broken first column name due to Microsoft Excel's csv "BOM" stuff
Lstate <- list(cov2011 = cov2011, cov2012 = cov2012, cov2013 = cov2013, cov2014 = cov2014, hce2011 = hce2011, hce2012 = hce2012, hce2013 = hce2013, hce2014 = hce2014, hhi2011 = hhi2011, hhi2012 = hhi2012, hhi2013 = hhi2013, hhi2014 = hhi2014, imr2011 = imr2011, imr2012 = imr2012, imr2013 = imr2013, imr2014 = imr2014, pop2011 = pop2011, pop2012 = pop2012, pop2013 = pop2013, pop2014 = pop2014, emission11_14 = emission11_14, PI_pc = PI_pc)
Lstate <- lapply(Lstate, function(x) {names(x)[1] <- "State"; x})
list2env(Lstate, envir = .GlobalEnv)
####Cleaning multiple data frames at once using lists, lapply, and functions
Lcov <- list(cov2011 = cov2011, cov2012 = cov2012, cov2013 = cov2013, cov2014 = cov2014)
Lcov <- lapply(Lcov, function(x)x[-c(1,53),c(1,2,6,10)])
list2env(Lcov, envir = .GlobalEnv)
#Removing United States from States in HCE, HHI, and IMR
Lh_h_i <- list(hce2011 = hce2011, hce2012 = hce2012, hce2013 = hce2013, hce2014 = hce2014, hhi2011 = hhi2011, hhi2012 = hhi2012, hhi2013 = hhi2013, hhi2014 = hhi2014, imr2011 = imr2011, imr2012 = imr2012, imr2013 = imr2013, imr2014 = imr2014)
Lh_h_i <- lapply(Lh_h_i, function(x)x[-1,])
list2env(Lh_h_i, envir = .GlobalEnv)
#Obesity - Removing NAs and Puerto Rico/Guam from the rows. Keeping only the state column and obesity percent column
obe2014 <- obe2014[-c(53:63),]
obe2013 <- obe2013[-c(53:62),]
obe2012 <- obe2012[-c(53:61),]
obe2011 <- obe2011[-c(53:61),]
Lobe <- list(obe2011 = obe2011, obe2012 = obe2012, obe2013 = obe2013, obe2014 = obe2014)
Lobe <- lapply(Lobe, function(x)x[-1,c(6,15)])
Lobe <- lapply(Lobe, function(x) {names(x) <- c("State", "ObesityRate"); x})
list2env(Lobe, envir = .GlobalEnv)
#Population percentages
Lpop <- list(pop2011 = pop2011, pop2012 = pop2012, pop2013 = pop2013, pop2014 = pop2014)
Lpop <- lapply(Lpop, function(x)x[-c(1,53),-c(5,7,9)])
list2env(Lpop, envir = .GlobalEnv)
#Smoking Rate - Filtering only to "Yes" responses to the BRFSS survey, then removing extraneous columns and rows
Lsmo <- list(smo2011 = smo2011, smo2012 = smo2012, smo2013 = smo2013, smo2014 = smo2014)
Lsmo <- lapply(Lsmo, function(x)x[-c(1,2,3,4,107:121),c(4,8,12)])
Lsmo <- lapply(Lsmo, function(x)x[x$Response == "Yes",])
Lsmo <- lapply(Lsmo, function(x) {names(x) <- c("State", "Response", "SmokingRate"); x})
list2env(Lsmo, envir = .GlobalEnv)
#Personal Income per capita
#Replacement for Household Income per capita
PI_pc <- PI_pc[,c(1,8,9,10,11)]
names(PI_pc)[c(2,3,4,5)] <- c("pi2011","pi2012","pi2013","pi2014")
#2011
cbind2011 <- cbind(cov2011, hce2011[2], hhi2011[2], imr2011[2], obe2011[2], pop2011[2:6], smo2011[3], emission11_14[2], PI_pc[2])
cbind2011$Year <- "2011"
cbind2011$ID <- c(1:51)
colnames(cbind2011)[15] <- "emi_pc"
colnames(cbind2011)[16] <- "pi_pc"
#2012
cbind2012 <- cbind(cov2012, hce2012[2], hhi2012[2], imr2012[2], obe2012[2], pop2012[2:6], smo2012[3], emission11_14[3], PI_pc[3])
cbind2012$Year <- "2012"
cbind2012$ID <- c(1:51)
colnames(cbind2012)[15] <- "emi_pc"
colnames(cbind2012)[16] <- "pi_pc"
#2013
cbind2013 <- cbind(cov2013, hce2013[2], hhi2013[2], imr2013[2], obe2013[2], pop2013[2:6], smo2013[3], emission11_14[4], PI_pc[4])
cbind2013$Year <- "2013"
cbind2013$ID <- c(1:51)
colnames(cbind2013)[15] <- "emi_pc"
colnames(cbind2013)[16] <- "pi_pc"
#2014
cbind2014 <- cbind(cov2014, hce2014[2], hhi2014[2], imr2014[2], obe2014[2], pop2014[2:6], smo2014[3], emission11_14[5], PI_pc[5])
cbind2014$Year <- "2014"
cbind2014$ID <- c(1:51)
colnames(cbind2014)[15] <- "emi_pc"
colnames(cbind2014)[16] <- "pi_pc"
#Panel data compliation
IMRdf <- rbind(cbind2011, cbind2012, cbind2013, cbind2014)
#Southern dummy variables
IMRdf$dixieSouth <- ifelse(IMRdf$State %in% c("Texas" , "Oklahoma" , "Missouri" , "Arkansas" , "Louisiana" , "Kentucky" , "Tennesee" , "Mississippi" , "Alabama" , "Georgia" , "Florida" , "South Carolina" , "North Carolina" , "Virginia" , "West Virginia"), 1, 0)
IMRdf$southeast <- ifelse(IMRdf$State %in% c("Arkansas" , "Louisiana", "Tennesee" , "Mississippi" , "Alabama" , "Georgia", "South Carolina" , "North Carolina", "Florida", "Virginia", "West Virginia", "Kentucky"), 1, 0)
#
IMRdf$loghhi <- log(IMRdf$Household_Income)
write.csv(IMRdf, "D:/RLearning/IMRPanel/Datasets/IMRdf.csv")
View(IMRdf)
library(plm)
library(ggplot2)
library(ggcorrplot)
library(car)
IMRdf <- read.csv("D:/RLearning/IMRPanel/Datasets/IMRdf.csv", stringsAsFactors = FALSE)
View(IMRdf)
ggplot(data = IMRdf, aes(Household_Income)) + geom_histogram()
ggplot(data = IMRdf, aes(x = Household_Income)) + geom_histogram()
ggplot(IMRdf, aes(x = Household_Income)) + geom_histogram()
ggplot(IMRdf, aes(x = Household_Income)) + geom_bar()
ggplot(IMRdf, aes(x = Household_Income)) + stat_count()
ggplot(IMRdf, aes(x = Household_Income)) + stat_count() + geom_bar()
ggplot(IMRdf, aes(x = Household_Income)) + stat_count(width = 0.5)
ggplot(IMRdf, aes(x = Household_Income)) + stat_count(width = 10)
ggplot(IMRdf, aes(x = Household_Income)) + geom_freqpoly()
ggplot(IMRdf, aes(x = Household_Income)) + geom_freqpoly() + stat_count()
ggplot(IMRdf, aes(x = Household_Income)) + geom_bar()
IMRdf$HCE <- (gsub("[$]", "", IMRdf$HCE))
IMRdf$HCE <- (gsub("[,]", "", IMRdf$HCE))
IMRdf$Household_Income <- (gsub("[,]", "", IMRdf$Household_Income))
#Changing vectors into numeric
IMRdf$HCE <- as.numeric(IMRdf$HCE)
IMRdf$Household_Income <- as.numeric(IMRdf$Household_Income)
ggplot(IMRdf, aes(x = Household_Income)) + geom_bar()
ggplot(IMRdf, aes(x = Household_Income)) + stat_count()
ggplot(IMRdf, aes(x = Household_Income)) + geom_bar()
ggplot(IMRdf, aes(x = Household_Income)) + geom_histogram()
ggplot(IMRdf, aes(x = Household_Income)) + geom_histogram(bins = 6)
ggplot(IMRdf, aes(x = Household_Income)) + geom_histogram(bins = 7)
ggplot(IMRdf, aes(x = Household_Income)) + geom_histogram(bins = 10)
ggplot(IMRdf, aes(x = Household_Income)) + geom_histogram(bins = 12)
ggplot(IMRdf, aes(x = Household_Income)) + geom_histogram(bins = 20)
IMRdf2011 <- IMRdf[Year == 2011]
IMRdf2011 <- IMRdf[IMRdf$Year == 2011]
IMRdf2011 <- IMRdf[IMRdf$Year == 2011,]
View(IMRdf2011)
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 20)
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 10)
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 4)
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 8)
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 10)
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 10, color = "black", fill = "white")
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 10, color = "black", fill = "gray")
library(ggthemes)
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 10, color = "black", fill = "gray") + theme_fivethirtyeight()
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 10) + theme_fivethirtyeight()
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 10, color = "black", fill = "gray") + theme_fivethirtyeight()
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "gray") + theme_fivethirtyeight()
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + theme_fivethirtyeight()
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "darkblue") + theme_fivethirtyeight()
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + theme_fivethirtyeight()
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + theme_fivethirtyeight() + labs(title = "Frequency of Household Income by State")
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + theme_fivethirtyeight() + labs(title = "Frequency of Household Income by State" + x = "Household Income")
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + theme_fivethirtyeight() + labs(title = "Frequency of Household Income by State" + xlab = "Household Income")
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + theme_fivethirtyeight() + labs(title = "Frequency of Household Income by State" + xlab(Household Income))
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + theme_fivethirtyeight() + labs(title = "Frequency of Household Income by State", x = "Household Income")
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + theme_fivethirtyeight(x = "Household Income") + labs(title = "Frequency of Household Income by State", x = "Household Income")
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + labs(title = "Frequency of Household Income by State", x = "Household Income")
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + labs(title = "Frequency of Household Income by State", x = "Household Income")
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + labs(title = "Frequency of Household Income by State", x = "Household Income", sub = "2011")
ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + labs(title = "Frequency of Household Income by State", x = "Household Income")
library(gganimate)
gghist <- ggplot(IMRdf2011, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + labs(title = "Frequency of Household Income by State", x = "Household Income")
gghist + transition_time(Year) + labs(title = "Year: {Frame_time}")
gghist <- ggplot(IMRdf, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + labs(title = "Frequency of Household Income by State", x = "Household Income")
gghist + transition_time(Year) + labs(title = "Year: {Frame_time}")
warnings()
gghist + transition_time(Year) + labs(title = "Year: {frame_time}")
gghist + transition_time(Year) + labs(title = "Year: {frame_time}") + shadow_mark(alpha = 0.3)
gghist + transition_time(Year) + labs(title = "Year: {frame_time}") + shadow_mark(alpha = 0.3, color = "green")
gghist + transition_time(Year) + labs(title = "Year: {frame_time}") + shadow_mark(alpha = 0.3, color = "green") + transition_states(Year, wrap = FALSE)
warnings()
gghist + labs(title = "Year: {frame_time}") + shadow_mark(alpha = 0.3, color = "green") + transition_states(Year, wrap = FALSE)
gghist + shadow_mark(alpha = 0.3, color = "green") + transition_states(Year, wrap = FALSE)
gghist + shadow_mark(alpha = 0.3, color = "dark green") + transition_states(Year, wrap = FALSE)
gghist + shadow_mark(alpha = 0.3, color = "dark green") + transition_states(Year, wrap = FALSE) + enter_grow()
gghist + shadow_mark(alpha = 0.3, color = "lightgreen") + transition_states(Year, wrap = FALSE) + enter_grow()
gghist + shadow_mark(alpha = 0.3, color = "lightgreen") + transition_states(Year, wrap = FALSE) + ease_aes("cubic-in-out")
gghist + shadow_mark(alpha = 0.3, color = "lightgreen") + transition_states(Year, wrap = FALSE) + ease_aes("cubic-in-out") + ggtitle('{closest_state')
warnings()
gghist + shadow_mark(alpha = 0.3, color = "lightgreen") + transition_states(Year, wrap = FALSE) + ease_aes("cubic-in-out") + ggtitle('{closest_state'})
gghist + shadow_mark(alpha = 0.3, color = "lightgreen") + transition_states(Year, wrap = FALSE) + ease_aes("cubic-in-out") + ggtitle('{closest_state}')
gghist + shadow_mark(alpha = 0.3, color = "lightgreen") + transition_states(Year, wrap = FALSE) + ease_aes("cubic-in-out") + ggtitle('Household Income Frequency', subtitle = 'Year {closest_state}')
gganim <- gghist + shadow_mark(alpha = 0.3, color = "lightgreen") + transition_states(Year, wrap = FALSE) + ease_aes("cubic-in-out") + ggtitle('Household Income Frequency', subtitle = 'Year {closest_state}')
animate(gganim, width = 500, height = 700)
animate(gganim, width = 500, height = 500)
animate(gganim, width = 500, height = 500, end_pause = 10)
animate(gganim, width = 500, height = 500, end_pause = 20)
animate(gganim, width = 500, height = 500, end_pause = 30)
library(plm)
library(ggplot2)
library(ggcorrplot)
library(car)
library(ggthemes)
library(gganimate)
IMRdf <- read.csv("D:/RLearning/IMRPanel/Datasets/IMRdf.csv", stringsAsFactors = FALSE)
#removing '$' and ',' from HCE and Household_income
IMRdf$HCE <- (gsub("[$]", "", IMRdf$HCE))
IMRdf$HCE <- (gsub("[,]", "", IMRdf$HCE))
IMRdf$Household_Income <- (gsub("[,]", "", IMRdf$Household_Income))
#Changing vectors into numeric
IMRdf$HCE <- as.numeric(IMRdf$HCE)
IMRdf$Household_Income <- as.numeric(IMRdf$Household_Income)
#Replacing rounding done by the KFF using the original source of the ACS community survey
#Originally, these values were listed as "NA" or "< 0.1"
mont11 <- 4403/982854
mont12 <- 4145/990785
mont13 <- 4038/998554
ida12 <- 8821/1567803
ida13 <- 8957/1567803
roundlist <- list(mont11 = mont11, mont12 = mont12, mont13 = mont13, ida12 = ida12, ida13 = ida13)
roundlist <- lapply(roundlist, round, 4)
list2env(roundlist, envir = .GlobalEnv)
IMRdf[27,11] <- mont11
View(IMRdf)
IMRdf[78,11] <- mont12
IMRdf[129,11] <- mont13
IMRdf[64,11] <- ida12
IMRdf[115,11] <- ida13
IMRdf$Black <- as.numeric(IMRdf$Black)
#Log of incomes
IMRdf$loghhi <- log(IMRdf$Household_Income)
IMRdf$logpi <- log(IMRdf$pi_pc)
#Correlation matrix
IMRcorr <- IMRdf[,c(4,5,6,7,9,11,15,16)]
IMRcorr <- round(cor(IMRcorr), digit = 2)
ggcorrplot(IMRcorr, hc.order = TRUE, type = "lower", outline.color = "gray", ggtheme = ggplot2::theme_gray(), lab = TRUE, title = "Correlation Between Independent Variables")
#panel data stuff
IMRpd <- pdata.frame(IMRdf, index=c("ID", "Year"))
IMRpd12 <- pdata.frame(IMRdf12, index=c("ID", "Year"))
fixed <- plm(IMR ~ Medicaid.Only + Uninsured + HCE + Household_Income + ObesityRate + White + Black + Hispanic + Asian + emi_pc + SmokingRate + dixieSouth + deepSouth, data = IMRpd, index = c("ID", "Year"))
fixedoriginal <- plm(IMR ~ HCE + Household_Income + ObesityRate + deepSouth + dixieSouth, data = IMRpd, index = c("ID", "Year"))
pooled <- plm(IMR ~ Medicaid.Only + Uninsured + HCE + loghhi + ObesityRate + Black + emi_pc + SmokingRate + deepSouth, data = IMRpd, index = c("ID", "Year"), model = "pooling")
vif(pooled)
random <- plm(IMR ~ Medicaid.Only + Uninsured + HCE + loghhi + ObesityRate + Black + emi_pc + SmokingRate + deepSouth, data = IMRpd, index = c("ID", "Year"), model = "random")
##Histogram
gghist <- ggplot(IMRdf, aes(x = Household_Income)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + labs(title = "Frequency of Household Income by State", x = "Household Income")
##Animated Histogram
gganim <- gghist + shadow_mark(alpha = 0.3, color = "lightgreen") + transition_states(Year, wrap = FALSE) + ease_aes("cubic-in-out") + ggtitle('Household Income Frequency', subtitle = 'Year {closest_state}')
animate(gganim, width = 500, height = 500, end_pause = 30)
gganim <- gghist + shadow_mark(alpha = 0.3, color = "lightgreen") + transition_states(Year, wrap = FALSE) + ease_aes("cubic-in-out") + ggtitle('Household Income Frequency', subtitle = 'Year {closest_state}') + theme(plot.title = element_text(size = 20, face = "bold"))
animate(gganim, width = 500, height = 500, end_pause = 30)
anim_save("HHIhistogram.gif", animation = last_animation())
library(stargazer)
original <- plm(IMR ~ HCE + Household_Income + ObesityRate + deepSouth + dixieSouth, data = IMRpd, index = c("ID", "Year"))
random <- plm(IMR ~ Medicaid.Only + Uninsured + HCE + loghhi + ObesityRate + Black + emi_pc + SmokingRate + deepSouth, data = IMRpd, index = c("ID", "Year"), model = "random")
stargazer(original, random, type="html", title="Regression Results", align=TRUE, style="aer")
original <- plm(IMR ~ HCE + Household_Income + ObesityRate + deepSouth + dixieSouth, data = IMRpd, index = c("ID", "Year"))
View(IMRdf)
original <- plm(IMR ~ HCE + Household_Income + ObesityRate + southeast, data = IMRpd, index = c("ID", "Year"))
random <- plm(IMR ~ Medicaid.Only + Uninsured + HCE + loghhi + ObesityRate + Black + emi_pc + SmokingRate + southeast, data = IMRpd, index = c("ID", "Year"), model = "random")
stargazer(original, random, type="html", title="Regression Results", align=TRUE, style="aer")
summary(original)
IMRdf14 <- IMRdf[IMRdf$Year == 2014,]
original <- lm(IMR ~ HCE + Household_Income + ObesityRate + southeast)
original <- lm(IMR ~ HCE + Household_Income + ObesityRate + southeast, data = IMRdf14)
summary(original)
stargazer(original, random, type="html", title="Regression Results", align=TRUE, style="aer")
IMRsummary <- IMRdf[c(8,4,5,6,7,9,11,15,16)]
View(IMRsummary)
summary(IMRsummary)
IMRhtmlsummary <- summary(IMRsummary)
kable(IMRhtmlsummary)
library(knitr)
library(kable)
library(kableExtra)
kable(IMRhtmlsummary)
library(stargazer)
stargazer(IMRsummary)
stargazer(IMRsummary, type = "html", title = "Summary Statistics")
stargazer(IMRsummary, type = "html", title = "Summary Statistics", style = "aer")
IMRsummary <- IMRdf[c(8,4,5,6,17,9,11,15,16)]
random <- plm(IMR ~ Medicaid.Only + Uninsured + HCE + pi_pc + ObesityRate + Black + emi_pc + SmokingRate + southeast, data = IMRpd, index = c("ID", "Year"), model = "random")
original <- lm(IMR ~ HCE + pi_pc + ObesityRate + southeast, data = IMRdf14)
library(plm)
random <- plm(IMR ~ Medicaid.Only + Uninsured + HCE + pi_pc + ObesityRate + Black + emi_pc + SmokingRate + southeast, data = IMRpd, index = c("ID", "Year"), model = "random")
summary(random)
IMRdf$pi_pc1000 <- IMRdf$pi_pc/1000
IMRdf$HCE1000 <- IMRdf$HCE/1000
IMRpd <- pdata.frame(IMRdf, index=c("ID", "Year"))
random <- plm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + emi_pc + SmokingRate + southeast, data = IMRpd, index = c("ID", "Year"), model = "random")
original <- lm(IMR ~ HCE1000 + pi_pc1000 + ObesityRate + southeast, data = IMRdf14)
IMRdf14 <- IMRdf[IMRdf$Year == 2014,]
random <- plm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + emi_pc + SmokingRate + southeast, data = IMRpd, index = c("ID", "Year"), model = "random")
original <- lm(IMR ~ HCE1000 + pi_pc1000 + ObesityRate + southeast, data = IMRdf14)
summary(random)
summary(original)
stargazer(IMRsummary, type = "html", title = "Summary Statistics")
library(plmtest)
library(plm)
plmtest(random)
phtest(random)
phtest(random, fixed)
random <- plm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + emi_pc + SmokingRate + southeast, data = IMRpd, index = c("ID", "Year"), model = "within")
fixed <- plm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + emi_pc + SmokingRate + southeast, data = IMRpd, index = c("ID", "Year"), model = "within")
random <- plm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + emi_pc + SmokingRate + southeast, data = IMRpd, index = c("ID", "Year"), model = "random")
phtest(random, fixed)
summary(fixed)
phtest(fixed,random)
fixed <- plm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + emi_pc + SmokingRate, data = IMRpd, index = c("ID", "Year"), model = "within")
summary(fixed)
IMRdf <- read.csv("D:/RLearning/IMRPanel/Datasets/IMRdf.csv", stringsAsFactors = FALSE)
#removing '$' and ',' from HCE and Household_income
IMRdf$HCE <- (gsub("[$]", "", IMRdf$HCE))
IMRdf$HCE <- (gsub("[,]", "", IMRdf$HCE))
IMRdf$Household_Income <- (gsub("[,]", "", IMRdf$Household_Income))
#Changing vectors into numeric
IMRdf$HCE <- as.numeric(IMRdf$HCE)
IMRdf$Household_Income <- as.numeric(IMRdf$Household_Income)
#Replacing rounding done by the KFF using the original source of the ACS community survey
#Originally, these values were listed as "NA" or "< 0.1"
mont11 <- 4403/982854
mont12 <- 4145/990785
mont13 <- 4038/998554
ida12 <- 8821/1567803
ida13 <- 8957/1567803
roundlist <- list(mont11 = mont11, mont12 = mont12, mont13 = mont13, ida12 = ida12, ida13 = ida13)
roundlist <- lapply(roundlist, round, 4)
list2env(roundlist, envir = .GlobalEnv)
IMRdf[27,11] <- mont11
View(IMRdf)
IMRdf[78,11] <- mont12
IMRdf[129,11] <- mont13
IMRdf[64,11] <- ida12
IMRdf[115,11] <- ida13
IMRdf$Black <- as.numeric(IMRdf$Black)
#Log of incomes
IMRdf$loghhi <- log(IMRdf$Household_Income)
IMRdf$logpi <- log(IMRdf$pi_pc)
IMRdf$pi_pc1000 <- IMRdf$pi_pc/1000
IMRdf$HCE1000 <- IMRdf$HCE/1000
IMRdf14 <- IMRdf[IMRdf$Year == 2014,]
IMRsummary <- IMRdf[c(8,4,5,6,17,9,11,15,16)]
#panel data stuff
IMRpd <- pdata.frame(IMRdf, index=c("ID", "Year"))
library(plm)
library(ggplot2)
library(ggcorrplot)
library(car)
library(ggthemes)
library(gganimate)
IMRpd <- pdata.frame(IMRdf, index=c("ID", "Year"))
original <- lm(IMR ~ HCE1000 + pi_pc1000 + ObesityRate + southeast, data = IMRdf14)
fixed <- plm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + emi_pc + SmokingRate, data = IMRpd, index = c("ID", "Year"), model = "within")
phtest(fixed,random)
random <- plm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + emi_pc + SmokingRate + southeast, data = IMRpd, index = c("ID", "Year"), model = "random")
phtest(fixed,random)
gghistpi <- ggplot(IMRdf, aes(x = pi_pc)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + labs(title = "Frequency of Household Income by State", x = "Household Income")
gghistpi
gganim <- gghistpi + shadow_mark(alpha = 0.3, color = "lightgreen") + transition_states(Year, wrap = FALSE) + ease_aes("cubic-in-out") + ggtitle('Household Income Frequency', subtitle = 'Year {closest_state}') + theme(plot.title = element_text(size = 20, face = "bold"))
animate(gganim, width = 500, height = 500, end_pause = 30)
stargazer(original, fixed, type="html", title="Regression Results", align=TRUE, style="aer")
library(stargazer)
stargazer(original, fixed, type="html", title="Regression Results", align=TRUE, style="aer")
stargazer(original, fixed, type="html", title="Regression Results", align=TRUE, style="qje")
stargazer(original, fixed, type="html", title="Regression Results", align=TRUE, style="jpam")
stargazer(original, fixed, type="html", title="Regression Results", align=TRUE, style="AER")
library(huxtable)
huxreg('Cross Sectional IMR' = original, 'Fixed Effects IMR' = fixed)
huxreg('Cross Sectional IMR' = original, 'Fixed Effects IMR' = fixed, stars = c('*' = 0.1, '*' = .05, '***' = 0.01))
huxreg('Cross Sectional IMR' = original, 'Fixed Effects IMR' = fixed, stars = c(`*` = 0.1, `**` = .05, `***` = 0.01))
huxreg('Cross Sectional IMR' = original, 'Fixed Effects IMR' = fixed, stars = c(`*` = 0.1, `**` = .05, `***` = 0.01), error_pos = 'same')
huxreg('Cross Sectional IMR' = original, 'Fixed Effects IMR' = fixed, stars = c(`*` = 0.1, `**` = .05, `***` = 0.01), error_pos = 'same', set_caption('Linear Regressions of Infant Mortality Rate'))
huxreg('Cross Sectional IMR' = original, 'Fixed Effects IMR' = fixed, stars = c(`*` = 0.1, `**` = .05, `***` = 0.01), error_pos = 'same')
huxreg <- huxreg('Cross Sectional IMR' = original, 'Fixed Effects IMR' = fixed, stars = c(`*` = 0.1, `**` = .05, `***` = 0.01), error_pos = 'same')
quick_html(huxreg)
View(huxreg)
quick_html(huxreg('Cross Sectional IMR' = original, 'Fixed Effects IMR' = fixed, stars = c(`*` = 0.1, `**` = .05, `***` = 0.01), error_pos = 'same')
)
set_caption(huxreg, "Linear Regressions of Infant Mortality Rate")
huxreg <- set_caption(huxreg, "Linear Regressions of Infant Mortality Rate")
print_html(huxreg)
stargazer(IMRsummary, type = "html", title = "Summary Statistics")
?stargazer
?stargazer
fixed <- plm(IMR ~ Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + emi_pc + SmokingRate, data = IMRpd, index = c("ID", "Year"), model = "within")
summary(fixed)
fixed <- plm(IMR ~ HCE1000 + pi_pc1000 + ObesityRate + Black + emi_pc + SmokingRate, data = IMRpd, index = c("ID", "Year"), model = "within")
summary(fixed)
fixed <- plm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + logpi + ObesityRate + Black + emi_pc + SmokingRate, data = IMRpd, index = c("ID", "Year"), model = "within")
library(plm)
fixed <- plm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + logpi + ObesityRate + Black + emi_pc + SmokingRate, data = IMRpd, index = c("ID", "Year"), model = "within")
summary(fixed)
gghistemi <- ggplot(IMRdf, aes(x = emi_pc)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + labs(title = "Distribution of Personal Income Ranges", x = "Personal Income Per Capita")
library(ggplot2)
gghistemi <- ggplot(IMRdf, aes(x = emi_pc)) + geom_histogram(bins = 12, color = "black", fill = "lightblue") + labs(title = "Distribution of Personal Income Ranges", x = "Personal Income Per Capita")
gghistemi
lsdv <- lm(IMR ~ HCE + pi_pc + Black + factor(State) + factor(Year))
lsdv <- lm(IMR ~ HCE + pi_pc + Black + factor(State) + factor(Year), data = IMRdf)
summary(lsdv)
lsdv <- lm(IMR ~ HCE + pi_pc + Black + factor(State) + factor(Year) + southeast, data = IMRdf)
summary(lsdv)
library(dplyr)
IMRdf$region <- case_when(IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont' ) ~ "New England")
View(IMRdf)
IMRdf$region <- case_when(IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont' ) ~ "New England")
IMRdf$region <- case_when(IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont' ) ~ "New England")
IMRdf$region <- case_when(IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "New England")
IMRdf$region <- case_when(IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "New England", IMRdf$State = c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast')
IMRdf$region <- case_when(IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "New England", IMRdf$State == c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast')
IMRdf$region <- case_when(IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "New England", IMRdf$State == c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast', IMRdf$State == c('Illinois', 'Indiana', 'Michigan', 'Ohio', 'Wisconsin') ~ 'Great Lakes', IMRdf$State == c('Iowa', 'Kansas', 'Minnesota', 'Missouri', 'Nebraska', 'North Dakota','South Dakota') ~ 'Plains', IMRdf$State == c('Alabama','Arkansas','Florida','Georgia','Kentucky','Louisiana','Mississippi','North Carolina','South Carolina','Tennessee','Virginia','West Virginia') ~ 'Southeast', IMRdf$State == c('Arizona', 'New Mexico', 'Oklahoma', 'Texas') ~ 'Southwest', IMRdf$State == c('Colorado', 'Idaho', 'Montana', 'Utah', 'Wyoming' ~ 'Rocky Mountain', IMRdf$State == c('Alaska', 'California', 'Hawaii', 'Nevada', 'Oregon', 'Washington') ~ 'Far West')
View(IMRdf)
IMRdf$region <- case_when(IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "New England", IMRdf$State == c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast', IMRdf$State == c('Illinois', 'Indiana', 'Michigan', 'Ohio', 'Wisconsin') ~ 'Great Lakes', IMRdf$State == c('Iowa', 'Kansas', 'Minnesota', 'Missouri', 'Nebraska', 'North Dakota','South Dakota') ~ 'Plains', IMRdf$State == c('Alabama','Arkansas','Florida','Georgia','Kentucky','Louisiana','Mississippi','North Carolina','South Carolina','Tennessee','Virginia','West Virginia') ~ 'Southeast', IMRdf$State == c('Arizona', 'New Mexico', 'Oklahoma', 'Texas') ~ 'Southwest', IMRdf$State == c('Colorado', 'Idaho', 'Montana', 'Utah', 'Wyoming' ~ 'Rocky Mountain', IMRdf$State == c('Alaska', 'California', 'Hawaii', 'Nevada', 'Oregon', 'Washington') ~ 'Far West'))
rlang::last_error()
IMRdf$region <- case_when(
IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "New England",
IMRdf$State == c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast',
IMRdf$State == c('Illinois', 'Indiana', 'Michigan', 'Ohio', 'Wisconsin') ~ 'Great Lakes',
IMRdf$State == c('Iowa', 'Kansas', 'Minnesota', 'Missouri', 'Nebraska', 'North Dakota','South Dakota') ~ 'Plains',
IMRdf$State == c('Alabama','Arkansas','Florida','Georgia','Kentucky','Louisiana','Mississippi','North Carolina','South Carolina','Tennessee','Virginia','West Virginia') ~ 'Southeast',
IMRdf$State == c('Arizona', 'New Mexico', 'Oklahoma', 'Texas') ~ 'Southwest',
IMRdf$State == c('Colorado', 'Idaho', 'Montana', 'Utah', 'Wyoming') ~ 'Rocky Mountain',
IMRdf$State == c('Alaska', 'California', 'Hawaii', 'Nevada', 'Oregon', 'Washington') ~ 'Far West')
IMRdf$region <- case_when(IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "New England", IMRdf$State == c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast', IMRdf$State == c('Illinois', 'Indiana', 'Michigan', 'Ohio', 'Wisconsin') ~ 'Great Lakes', IMRdf$State == c('Iowa', 'Kansas', 'Minnesota', 'Missouri', 'Nebraska', 'North Dakota','South Dakota') ~ 'Plains', IMRdf$State == c('Alabama','Arkansas','Florida','Georgia','Kentucky','Louisiana','Mississippi','North Carolina','South Carolina','Tennessee','Virginia','West Virginia') ~ 'Southeast', IMRdf$State == c('Arizona', 'New Mexico', 'Oklahoma', 'Texas') ~ 'Southwest', IMRdf$State == c('Colorado', 'Idaho', 'Montana', 'Utah', 'Wyoming' ~ 'Rocky Mountain', IMRdf$State == c('Alaska', 'California', 'Hawaii', 'Nevada', 'Oregon', 'Washington') ~ 'Far West'))
IMRdf$region <- case_when(
IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "New England",
IMRdf$State == c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast',
IMRdf$State == c('Illinois', 'Indiana', 'Michigan', 'Ohio', 'Wisconsin') ~ 'Great Lakes',
IMRdf$State == c('Iowa', 'Kansas', 'Minnesota', 'Missouri', 'Nebraska', 'North Dakota','South Dakota') ~ 'Plains',
IMRdf$State == c('Alabama','Arkansas','Florida','Georgia','Kentucky','Louisiana','Mississippi','North Carolina','South Carolina','Tennessee','Virginia','West Virginia') ~ 'Southeast',
IMRdf$State == c('Arizona', 'New Mexico', 'Oklahoma', 'Texas') ~ 'Southwest',
IMRdf$State == c('Colorado', 'Idaho', 'Montana', 'Utah', 'Wyoming') ~ 'Rocky Mountain',
IMRdf$State == c('Alaska', 'California', 'Hawaii', 'Nevada', 'Oregon', 'Washington') ~ 'Far West', TRUE ~ 'w')
View(IMRdf)
IMRdf14$region <- case_when(
IMRdf14$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "New England",
IMRdf14$State == c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast',
IMRdf14$State == c('Illinois', 'Indiana', 'Michigan', 'Ohio', 'Wisconsin') ~ 'Great Lakes',
IMRdf14$State == c('Iowa', 'Kansas', 'Minnesota', 'Missouri', 'Nebraska', 'North Dakota','South Dakota') ~ 'Plains',
IMRdf14$State == c('Alabama','Arkansas','Florida','Georgia','Kentucky','Louisiana','Mississippi','North Carolina','South Carolina','Tennessee','Virginia','West Virginia') ~ 'Southeast',
IMRdf14$State == c('Arizona', 'New Mexico', 'Oklahoma', 'Texas') ~ 'Southwest',
IMRdf14$State == c('Colorado', 'Idaho', 'Montana', 'Utah', 'Wyoming') ~ 'Rocky Mountain',
IMRdf$State == c('Alaska', 'California', 'Hawaii', 'Nevada', 'Oregon', 'Washington') ~ 'Far West', TRUE ~ 'w')
IMRdf$region <- case_when(
IMRdf$State == c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "New England",
IMRdf$State == c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast',
IMRdf$State == c('Illinois', 'Indiana', 'Michigan', 'Ohio', 'Wisconsin') ~ 'Great Lakes',
IMRdf$State == c('Iowa', 'Kansas', 'Minnesota', 'Missouri', 'Nebraska', 'North Dakota','South Dakota') ~ 'Plains',
IMRdf$State == c('Alabama','Arkansas','Florida','Georgia','Kentucky','Louisiana','Mississippi','North Carolina','South Carolina','Tennessee','Virginia','West Virginia') ~ 'Southeast',
IMRdf$State == c('Arizona', 'New Mexico', 'Oklahoma', 'Texas') ~ 'Southwest',
IMRdf$State == c('Colorado', 'Idaho', 'Montana', 'Utah', 'Wyoming') ~ 'Rocky Mountain',
IMRdf$State == c('Alaska', 'California', 'Hawaii', 'Nevada', 'Oregon', 'Washington') ~ 'Far West', TRUE ~ 'w')
IMRdf$region <- case_when(
IMRdf$State %in% c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "New England",
IMRdf$State %in% c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast',
IMRdf$State %in% c('Illinois', 'Indiana', 'Michigan', 'Ohio', 'Wisconsin') ~ 'Great Lakes',
IMRdf$State %in% c('Iowa', 'Kansas', 'Minnesota', 'Missouri', 'Nebraska', 'North Dakota','South Dakota') ~ 'Plains',
IMRdf$State %in% c('Alabama','Arkansas','Florida','Georgia','Kentucky','Louisiana','Mississippi','North Carolina','South Carolina','Tennessee','Virginia','West Virginia') ~ 'Southeast',
IMRdf$State %in% c('Arizona', 'New Mexico', 'Oklahoma', 'Texas') ~ 'Southwest',
IMRdf$State %in% c('Colorado', 'Idaho', 'Montana', 'Utah', 'Wyoming') ~ 'Rocky Mountain',
IMRdf$State %in% c('Alaska', 'California', 'Hawaii', 'Nevada', 'Oregon', 'Washington') ~ 'Far West', TRUE ~ 'w')
View(IMRdf)
IMRdf$region <- case_when(
IMRdf$State %in% c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "NewEngland",
IMRdf$State %in% c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast',
IMRdf$State %in% c('Illinois', 'Indiana', 'Michigan', 'Ohio', 'Wisconsin') ~ 'GreatLakes',
IMRdf$State %in% c('Iowa', 'Kansas', 'Minnesota', 'Missouri', 'Nebraska', 'North Dakota','South Dakota') ~ 'Plains',
IMRdf$State %in% c('Alabama','Arkansas','Florida','Georgia','Kentucky','Louisiana','Mississippi','North Carolina','South Carolina','Tennessee','Virginia','West Virginia') ~ 'Southeast',
IMRdf$State %in% c('Arizona', 'New Mexico', 'Oklahoma', 'Texas') ~ 'Southwest',
IMRdf$State %in% c('Colorado', 'Idaho', 'Montana', 'Utah', 'Wyoming') ~ 'RockyMountain',
IMRdf$State %in% c('Alaska', 'California', 'Hawaii', 'Nevada', 'Oregon', 'Washington') ~ 'Far West', TRUE ~ 'w')
View(IMRdf)
IMRdf$region <- case_when(
IMRdf$State %in% c('Connecticut', 'Maine','Massachusetts','New Hampshire', 'Rhode Island', 'Vermont') ~ "NewEngland",
IMRdf$State %in% c('Delaware', 'District of Columbia', 'Maryland', 'New Jersey', 'New York', 'Pennsylvania') ~ 'Mideast',
IMRdf$State %in% c('Illinois', 'Indiana', 'Michigan', 'Ohio', 'Wisconsin') ~ 'GreatLakes',
IMRdf$State %in% c('Iowa', 'Kansas', 'Minnesota', 'Missouri', 'Nebraska', 'North Dakota','South Dakota') ~ 'Plains',
IMRdf$State %in% c('Alabama','Arkansas','Florida','Georgia','Kentucky','Louisiana','Mississippi','North Carolina','South Carolina','Tennessee','Virginia','West Virginia') ~ 'Southeast',
IMRdf$State %in% c('Arizona', 'New Mexico', 'Oklahoma', 'Texas') ~ 'Southwest',
IMRdf$State %in% c('Colorado', 'Idaho', 'Montana', 'Utah', 'Wyoming') ~ 'RockyMountain',
IMRdf$State %in% c('Alaska', 'California', 'Hawaii', 'Nevada', 'Oregon', 'Washington') ~ 'FarWest', TRUE ~ 'w')
lsdv <- lm(IMR ~ HCE + pi_pc + Black + factor(region) + factor(Year) + southeast, data = IMRdf)
summary(lsdv)
library(ggplot2)
ggplot(data = IMRdf, aes(x = Year, y = IMR, group = region)) + geom_boxplot()
ggplot(data = IMRdf, aes(x = region, y = IMR, group = region)) + geom_boxplot()
ggplot(data = IMRdf, aes(x = region, y = IMR, group = region, color = region)) + geom_boxplot()
ggplot(data = IMRdf, aes(x = region, y = IMR, group = region, color = region, fill = region)) + geom_boxplot()
ggplot(data = IMRdf, aes(x = region, y = IMR, group = region, fill = region)) + geom_boxplot()
ggplot(data = IMRdf, aes(x = region, y = IMR, group = region, fill = region)) + geom_boxplot() + labs(title = "Plot of Infant Mortality Rate Across Regions", x = "Region (as defined by the BEA)", y = "IMR (per 1000 infants under 1)")
lsdv <- lm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + emi_pc + SmokingRate + factor(region) + factor(Year) + southeast, data = IMRdf)
summary(lsdv)
lsdv <- lm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + White + Hispanic + Asian + emi_pc + SmokingRate + factor(region) + factor(Year) + southeast, data = IMRdf)
summary(lsdv)
lsdv <- lm(IMR ~ Medicaid.Only + Uninsured + HCE1000 + pi_pc1000 + ObesityRate + Black + White + Hispanic + Asian + emi_pc + SmokingRate + factor(region) + factor(Year), data = IMRdf)
summary(lsdv)
ggplot(data = IMRdf, aes(x = region, y = IMR, group = region, fill = region)) + geom_boxplot() + labs(title = "Plot of Infant Mortality Rate Across Regions", x = "Region (as defined by the BEA)", y = "IMR (per 1000 infants under 1)")
huxreg <- huxreg('Cross Sectional IMR' = original, 'Least Squares Dummy Variable' = LSDV, stars = c(`*` = 0.1, `**` = .05, `***` = 0.01), error_pos = 'same')
set_caption(huxreg, "Linear Regressions of Infant Mortality Rate")
huxreg <- set_caption(huxreg, "Linear Regressions of Infant Mortality Rate")
print_html(huxreg)
library(huxtable)
huxreg <- huxreg('Cross Sectional IMR' = original, 'Least Squares Dummy Variable' = LSDV, stars = c(`*` = 0.1, `**` = .05, `***` = 0.01), error_pos = 'same')
set_caption(huxreg, "Linear Regressions of Infant Mortality Rate")
huxreg <- set_caption(huxreg, "Linear Regressions of Infant Mortality Rate")
print_html(huxreg)
?vif
